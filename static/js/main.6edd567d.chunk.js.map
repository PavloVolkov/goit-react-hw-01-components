{"version":3,"sources":["components/profile/profile.module.css","components/transactionHistory/transactionHistory.module.css","components/statistic/statistical.module.css","components/friendsLIst/friendsListItem/friendsListItem.module.css","components/friendsLIst/friendsList.module.css","components/transactionHistory/TransactionHistory.jsx","components/friendsLIst/friendsListItem/friendsListItem.jsx","components/friendsLIst/FriendsList.jsx","components/statistic/randomColor.js","components/statistic/Statystic.jsx","components/profile/Profile.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","TransactionHistory","items","className","styles","transactionHistory","transactionTitle","transactionItem","map","id","type","amount","currency","transactionContent","defaultProps","ProppTypes","PropTypes","arrayOf","shape","number","string","bool","FriendsListItem","name","avatar","isOnline","item","statusRed","statusBlue","src","alt","FriendsList","friends","FriendsListWrapper","randomColor","randomValue","Math","round","random","toString","Statystic","stats","title","statistics","statList","label","percentage","style","background","Profile","tag","location","profile","description","quantity","followers","views","likes","App","statistic","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6edd567d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__gg04M\",\"description\":\"profile_description__14X4n\",\"location\":\"profile_location__3M3w_\",\"stats\":\"profile_stats__1u5cr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transactionHistory_transactionHistory__1pgHT\",\"transactionItem\":\"transactionHistory_transactionItem__32luO\",\"transactionTitle\":\"transactionHistory_transactionTitle__piozQ\",\"transactionContent\":\"transactionHistory_transactionContent__2_AVB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistical_statistics__3AMlP\",\"title\":\"statistical_title__2XRq-\",\"statList\":\"statistical_statList__oOtlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusRed\":\"friendsListItem_statusRed__mqx7E\",\"statusBlue\":\"friendsListItem_statusBlue__6cwm1\",\"item\":\"friendsListItem_item__2rOom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendsListWrapper\":\"friendsList_FriendsListWrapper__1dFtD\",\"statusRed\":\"friendsList_statusRed__6vx4g\",\"statusBlue\":\"friendsList_statusBlue__GMLw_\"};","import PropTypes from 'prop-types';\r\nimport styles from './transactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <div>\r\n      <table className={styles.transactionHistory}>\r\n        <thead>\r\n          <tr className={styles.transactionTitle}>\r\n            <th className={styles.transactionItem}>Type</th>\r\n            <th className={styles.transactionItem}>Amount</th>\r\n            <th className={styles.transactionItem}>Currency</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map(({ id, type, amount, currency }) => {\r\n            return (\r\n              <tr key={id} className={styles.transactionContent}>\r\n                <td className={styles.transactionItem}>{type}</td>\r\n                <td className={styles.transactionItem}>{amount}</td>\r\n                <td className={styles.transactionItem}>{currency}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nTransactionHistory.defaultProps = {\r\n  items: [\r\n    {\r\n      id: '-',\r\n      type: 'undefined',\r\n      amount: '-',\r\n      currency: 'undefined',\r\n    },\r\n  ],\r\n};\r\n\r\nTransactionHistory.ProppTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.bool,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './friendsListItem.module.css';\r\n\r\nconst FriendsListItem = ({ id, name, avatar, isOnline }) => {\r\n  return (\r\n    <li key={id} className={styles.item}>\r\n      <span className={isOnline ? styles.statusRed : styles.statusBlue}></span>\r\n      <img className={styles.avatar} src={avatar} alt=\"\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendsListItem.defaultProps = {\r\n  id: '-',\r\n  name: 'user',\r\n  avatar:\r\n    'https://yt3.ggpht.com/ytc/AAUvwniQnSWCntU5FpkgEeMsqpKqRq9d1nGZ-GwKM6iaOA=s900-c-k-c0x00ffffff-no-rj',\r\n  isOnline: '-',\r\n};\r\n\r\nFriendsListItem.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n};\r\nexport default FriendsListItem;\r\n","import styles from './friendsList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport FriendsListItem from './friendsListItem/friendsListItem';\r\nconst FriendsList = ({ friends }) => {\r\n  return (\r\n    <div className={styles.FriendsListWrapper}>\r\n      {friends.map(({ id, name, avatar, isOnline }) => {\r\n        return (\r\n          <FriendsListItem\r\n            id={id}\r\n            name={name}\r\n            avatar={avatar}\r\n            isOnline={isOnline}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFriendsList.defaultProps = {\r\n  friends: [\r\n    {\r\n      id: '-',\r\n      name: 'user',\r\n      avatar:\r\n        'https://yt3.ggpht.com/ytc/AAUvwniQnSWCntU5FpkgEeMsqpKqRq9d1nGZ-GwKM6iaOA=s900-c-k-c0x00ffffff-no-rj',\r\n      isOnline: '-',\r\n    },\r\n  ],\r\n};\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      avatar: PropTypes.string,\r\n      isOnline: PropTypes.bool,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendsList;\r\n","let randomColor = function () {\r\n  function randomValue() {\r\n    return Math.round(Math.random() * 255).toString();\r\n  }\r\n  return (\r\n    'rgb' +\r\n    '(' +\r\n    randomValue() +\r\n    ',' +\r\n    ' ' +\r\n    randomValue() +\r\n    ',' +\r\n    ' ' +\r\n    randomValue() +\r\n    ')'\r\n  );\r\n};\r\n\r\nexport default randomColor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistical.module.css';\r\nimport randomColor from './randomColor';\r\n\r\nconst Statystic = ({ stats, title }) => {\r\n  return (\r\n    <div>\r\n      <section className={styles.statistics}>\r\n        <h2 className={styles.title}>{title ? title : 'Upload stats'}</h2>\r\n        <ul className={styles.statList}>\r\n          {stats.map(({ id, label, percentage }) => {\r\n            return (\r\n              <li\r\n                key={id}\r\n                className={styles.item}\r\n                style={{ background: `${randomColor()}` }}\r\n              >\r\n                <span className={styles.label}>{label}</span>\r\n                <span className={styles.percentage}>{percentage} </span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatystic.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n    }),\r\n  ),\r\n};\r\n\r\nStatystic.defaultProps = {\r\n  id: 'none',\r\n  label: 'none',\r\n  percentage: 0,\r\n};\r\nexport default Statystic;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  //   console.log({ name, tag, location, avatar, stats });\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.profile}>\r\n        <div className={styles.description}>\r\n          <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\r\n          <p className={styles.name}>@{name}</p>\r\n          <p className={styles.tag}>{tag}</p>\r\n          <p className={styles.location}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={styles.stats}>\r\n          <li>\r\n            <span className={styles.label}>Followers</span>\r\n            <span className={styles.quantity}>{stats.followers}</span>\r\n          </li>\r\n          <li>\r\n            <span className={styles.label}>Views</span>\r\n            <span className={styles.quantity}>{stats.views}</span>\r\n          </li>\r\n          <li>\r\n            <span className={styles.label}>Likes</span>\r\n            <span className={styles.quantity}>{stats.likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nProfile.defaultProps = {\r\n  id: '-',\r\n  name: 'user',\r\n  avatar:\r\n    'https://yt3.ggpht.com/ytc/AAUvwniQnSWCntU5FpkgEeMsqpKqRq9d1nGZ-GwKM6iaOA=s900-c-k-c0x00ffffff-no-rj',\r\n  isOnline: '-',\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import './App.css';\nimport TransactionHistory from './components/transactionHistory/TransactionHistory';\nimport items from './components/transactionHistory/transacyionHistory.json';\nimport FriendsList from './components/friendsLIst/FriendsList';\nimport friends from './components/friendsLIst/friendList.json';\nimport statistic from './components/statistic/statistic.json';\nimport Statystic from './components/statistic/Statystic';\nimport Profile from './components/profile/Profile';\nimport profile from './components/profile/Proffile.json';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        avatar={profile.avatar}\n        name={profile.name}\n        tag={profile.tag}\n        location={profile.location}\n        stats={profile.stats}\n      />\n      <Statystic stats={statistic} />\n      <FriendsList friends={friends} />\n      <TransactionHistory items={items} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}