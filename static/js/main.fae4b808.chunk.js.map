{"version":3,"sources":["components/transactionHistory/transactionHistory.module.css","components/statistic/statistical.module.css","components/friendsLIst/friendsListItem/friendsListItem.module.css","components/friendsLIst/friendsList.module.css","components/transactionHistory/TransactionHistory.jsx","components/friendsLIst/friendsListItem/friendsListItem.jsx","components/friendsLIst/FriendsList.jsx","components/statistic/randomColor.js","components/statistic/Statystic.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","TransactionHistory","items","className","styles","transactionHistory","transactionTitle","transactionItem","map","id","type","amount","currency","transactionContent","FriendsListItem","name","avatar","isOnline","item","statusRed","statusBlue","src","alt","FriendsList","friends","FriendsListWrapper","randomColor","randomValue","Math","round","random","toString","Statystic","stats","title","statistics","statList","label","percentage","style","background","defaultProps","App","Profile","profile","tag","location","statistic","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fae4b808.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transactionHistory_transactionHistory__1pgHT\",\"transactionItem\":\"transactionHistory_transactionItem__32luO\",\"transactionTitle\":\"transactionHistory_transactionTitle__piozQ\",\"transactionContent\":\"transactionHistory_transactionContent__2_AVB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistical_statistics__3AMlP\",\"title\":\"statistical_title__2XRq-\",\"statList\":\"statistical_statList__oOtlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusRed\":\"friendsListItem_statusRed__mqx7E\",\"statusBlue\":\"friendsListItem_statusBlue__6cwm1\",\"item\":\"friendsListItem_item__2rOom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendsListWrapper\":\"friendsList_FriendsListWrapper__1dFtD\",\"statusRed\":\"friendsList_statusRed__6vx4g\",\"statusBlue\":\"friendsList_statusBlue__GMLw_\"};","import ProppTypes from 'prop-types';\r\nimport styles from './transactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <div>\r\n      <table className={styles.transactionHistory}>\r\n        <thead>\r\n          <tr className={styles.transactionTitle}>\r\n            <th className={styles.transactionItem}>Type</th>\r\n            <th className={styles.transactionItem}>Amount</th>\r\n            <th className={styles.transactionItem}>Currency</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map(({ id, type, amount, currency }) => {\r\n            return (\r\n              <tr key={id} className={styles.transactionContent}>\r\n                <td className={styles.transactionItem}>{type}</td>\r\n                <td className={styles.transactionItem}>{amount}</td>\r\n                <td className={styles.transactionItem}>{currency}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\n// TransactionHistory.defaultProps = {\r\n//     data:[\r\n//         {\r\n//             id:\"-\",\r\n//             type: \"undefined\",\r\n//             amount: \"-\",\r\n//             currency: \"undefined\"\r\n//         }\r\n//     ]\r\n//   };\r\n\r\n// TransactionHistory.ProppTypes = {\r\n//     data: ProppTypes.arrayOf(\r\n//         ProppTypes.shape({\r\n//             id: ProppTypes.number,\r\n//             type: ProppTypes.string,\r\n//             amount: ProppTypes.string,\r\n//             currency: ProppTypes.bool\r\n//         })\r\n//     )\r\n// };\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './friendsListItem.module.css';\r\n\r\nconst FriendsListItem = ({ id, name, avatar, isOnline }) => {\r\n  return (\r\n    <li key={id} className={styles.item}>\r\n      <span className={isOnline ? styles.statusRed : styles.statusBlue}></span>\r\n      <img className={styles.avatar} src={avatar} alt=\"\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendsListItem.propTypes = {};\r\n\r\nexport default FriendsListItem;\r\n","import styles from './friendsList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport FriendsListItem from './friendsListItem/friendsListItem';\r\nconst FriendsList = ({ friends }) => {\r\n  return (\r\n    <div className={styles.FriendsListWrapper}>\r\n      {friends.map(({ id, name, avatar, isOnline }) => {\r\n        return (\r\n          <FriendsListItem\r\n            id={id}\r\n            name={name}\r\n            avatar={avatar}\r\n            isOnline={isOnline}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n// FriendsList.defaultProps = {\r\n//   data: [\r\n//     {\r\n//       id: '-',\r\n//       name: 'user',\r\n//       avatar:\r\n//         'https://yt3.ggpht.com/ytc/AAUvwniQnSWCntU5FpkgEeMsqpKqRq9d1nGZ-GwKM6iaOA=s900-c-k-c0x00ffffff-no-rj',\r\n//       isOnline: '-',\r\n//     },\r\n//   ],\r\n// };\r\n\r\n// FriendsList.propTypes = {\r\n//   data: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.number,\r\n//       name: PropTypes.string,\r\n//       avatar: PropTypes.string,\r\n//       isOnline: PropTypes.bool,\r\n//     }),\r\n//   ),\r\n// };\r\n\r\nexport default FriendsList;\r\n","let randomColor = function () {\r\n  function randomValue() {\r\n    return Math.round(Math.random() * 255).toString();\r\n  }\r\n  return (\r\n    'rgb' +\r\n    '(' +\r\n    randomValue() +\r\n    ',' +\r\n    ' ' +\r\n    randomValue() +\r\n    ',' +\r\n    ' ' +\r\n    randomValue() +\r\n    ')'\r\n  );\r\n};\r\n\r\nexport default randomColor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistical.module.css';\r\nimport randomColor from './randomColor';\r\n\r\nconst Statystic = ({ stats, title }) => {\r\n  return (\r\n    <div>\r\n      <section className={styles.statistics}>\r\n        <h2 className={styles.title}>{title ? title : 'Upload stats'}</h2>\r\n        <ul className={styles.statList}>\r\n          {stats.map(({ id, label, percentage }) => {\r\n            return (\r\n              <li\r\n                key={id}\r\n                className={styles.item}\r\n                style={{ background: `${randomColor()}` }}\r\n              >\r\n                <span className={styles.label}>{label}</span>\r\n                <span className={styles.percentage}>{percentage} </span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatystic.propTypes = {};\r\n\r\nStatystic.defaultProps = {\r\n  // title: 'Upload stats',\r\n};\r\nexport default Statystic;\r\n","import './App.css';\nimport TransactionHistory from './components/transactionHistory/TransactionHistory';\nimport items from './components/transactionHistory/transacyionHistory.json';\nimport FriendsList from './components/friendsLIst/FriendsList';\nimport friends from './components/friendsLIst/friendList.json';\nimport statistic from './components/statistic/statistic.json';\nimport Statystic from './components/statistic/Statystic';\nimport Profile from './components/profile/Profile';\nimport profile from './components/profile/profile.json';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        avatar={profile.avatar}\n        name={profile.name}\n        tag={profile.tag}\n        location={profile.location}\n        stats={profile.stats}\n      />\n      <Statystic stats={statistic} />\n      <FriendsList friends={friends} />\n      <TransactionHistory items={items} />\n    </div>\n  );\n}\n\nexport default App;\n\n/* <Profile\n        avatar={profile.avatar}\n        name={profile.name}\n        tag={profile.tag}\n        location={profile.location}\n        stats={profile.stats}\n      />\n      <FriendsList data={friendsList} />\n      <Statistic stats={statistic} />\n      <TransactionHistory data={transactionHistory} /> */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}